version: "3"
services:
  # RabbitMQ
  rabbitmq:
    container_name: rabbitmq # Keep this the same with the service name for better compatibility with both Docker Swarm and Compose configurations
    image: "rabbitmq:management"
    restart: unless-stopped
    networks:
      isolated-network-rabbit: # Isolated network for RabbitMQ
    volumes:
      - volume-rabbitmq.data:/var/lib/rabbitmq # Bind the data volume for RabbitMQ
    ports:
      - "5672:5672" # RabbitMQ
      - "15672:15672" # RabbitMQ Management Portal
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_MANAGEMENT_USERNAME}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_MANAGEMENT_PASSWORD}
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 5s
      timeout: 5s
      retries: 10
  # Producer
  producer:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        SRC_DIR: producer
        PORT: ${PORT}
    restart: unless-stopped
    networks:
      isolated-network-rabbit: # Isolated network for RabbitMQ
    ports:
      - ${PORT}:${PORT}
    env_file:
      - application.properties
    environment:
      RABBITMQ_HOST: rabbitmq # Ensure this matches the service name of the RabbitMQ service
    healthcheck:
      test: curl --fail http://localhost:${PORT} || exit 1
      interval: 10s
      timeout: 3s
      retries: 10
    depends_on:
      rabbitmq:
        condition: service_healthy
  # Consumers
  consumer:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        SRC_DIR: consumer
        PORT: ${PORT}
    restart: unless-stopped
    networks:
      isolated-network-rabbit: # Isolated network for RabbitMQ
    env_file:
      - application.properties
    environment:
      RABBITMQ_HOST: rabbitmq # Ensure this matches the service name of the RabbitMQ service
    depends_on:
      rabbitmq:
        condition: service_healthy
      producer:
        condition: service_healthy
    deploy:
      mode: replicated
      replicas: 9 # Number of consumers
networks:
  isolated-network-rabbit: # Isolated network for RabbitMQ
volumes:
  volume-rabbitmq.data: # Data volume for RabbitMQ
